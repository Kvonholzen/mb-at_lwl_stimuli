<<<<<<< HEAD
administrations = TRUE,
iteminfo = TRUE)
aoa.comp <- fit_aoa(f.data,
measure = "understands",
method = "empirical",
proportion = 0.5)
aoa.comp$aoa_type <- "understands"
aoa.prod <- fit_aoa(f.data,
measure = "produces",
method = "empirical",
proportion = 0.5)
aoa.prod$aoa_type <- "produces"
aoa.cp <- rbind(aoa.comp, aoa.prod)
aoa.cp$form <- form_list[i]
aoa.mat <- rbind(aoa.mat, aoa.cp)
}
View(aoa.mat)
view(admin_info)
View(admin_info)
# narrow down to just nouns and verbs
aoa.m <- aoa.mat %>%
filter(lexical_class == "nouns" | lexical_class == "verbs")
View(aoa.m)
# narrow down to just nouns and verbs
# make wider so that we have one column for understands and one for produces
# for each form?
aoa.m <- aoa.mat %>%
filter(lexical_class == "nouns" | lexical_class == "verbs") %>%
pivot_wider(names_from = aoa_type:form, values_from = aoa)
View(aoa.m)
# narrow down to just nouns and verbs
# make wider so that we have one column for understands and one for produces
# for each form?
aoa.m <- aoa.mat %>%
filter(lexical_class == "nouns" | lexical_class == "verbs") %>%
pivot_wider(names_from = form, values_from = aoa)
View(aoa.m)
knitr::opts_chunk$set(echo = TRUE)
# R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
library(wordbankr)
library(childesr)
library(dplyr)
#Wordbank
# get_instruments()
wordbank_lang <- "English (American)"
# get information about what forms are available in this language
admin_info <- get_administration_data(language = wordbank_lang)
form_list <- as.list(unique(admin_info$form))
knitr::opts_chunk$set(echo = TRUE)
# R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
library(wordbankr)
library(childesr)
library(dplyr)
install.packages("childesr")
knitr::opts_chunk$set(echo = TRUE)
# R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
library(wordbankr)
library(childesr)
library(dplyr)
library(tidyr)
library(purrr)
library(stringi)
# get_instruments()
wordbank_lang <- "English (American)"
# get information about what forms are available in this language
admin_info <- get_administration_data(language = wordbank_lang)
form_list <- as.list(unique(admin_info$form))
# go through each form type and extract comprehension and production information
aoa.mat <- data.frame(matrix(NA, nrow=0, ncol=10))
for(i in 1:length(form_list)){
f.data <- get_instrument_data(language = wordbank_lang,
form = form_list[i],
administrations = TRUE,
iteminfo = TRUE)
# Get Age of Acquisition
# At what age do 50% of children understand this word?
aoa.comp <- fit_aoa(f.data,
measure = "understands",
method = "empirical",
proportion = 0.5)
aoa.comp$aoa_type <- "Wordbank_AoA_understands"
# At what age do 50% of children understand this word?
aoa.prod <- fit_aoa(f.data,
measure = "produces",
method = "empirical",
proportion = 0.5)
aoa.prod$aoa_type <- "Wordbank_AoA_produces"
aoa.cp <- rbind(aoa.comp, aoa.prod)
aoa.cp$form <- form_list[i]
aoa.mat <- rbind(aoa.mat, aoa.cp)
}
aoa.m <- aoa.mat %>%
filter(lexical_class == "nouns" | lexical_class == "verbs") %>% # narrow down to just nouns and verbs
ungroup(num_item_id)%>%
select(definition, category, lexical_class, uni_lemma, aoa_type, form, aoa) %>% # only columns we're interested in
pivot_wider(names_from = form, values_from = aoa) ## make wider so that we have one column for each form
# identify the lowest AoA value for each word found in the forms
aoa.m <- aoa.m %>%
nest(-definition, -category, -lexical_class, -uni_lemma, -aoa_type) %>% # nest rest of columns apart from id columns
mutate(min_aoa = map(data, min, na.rm = T)) %>%  # identify the lowest AoA value, putting it in the column min_aoa
unnest(cols = c(data, min_aoa)) %>%
select(definition, category, lexical_class, uni_lemma, aoa_type, min_aoa)%>% # only columns we're interested in
pivot_wider(names_from = aoa_type, values_from = min_aoa) %>% # make wider so we have one column for understands and one for produces
filter(is.finite(Wordbank_AoA_understands)) # filter out the rows with Inf values, which result when both understands and produces don't have an AoA
#(because there is no point at which AoA is above 50% in the measured ages)
aoa.m$definition <- sub("* \\(.*\\)", "", aoa.m$definition)
View(aoa.m)
# Wordbank
# first, identify the strings used for this language in wordbank
#Wordbank
# get_instruments()
wordbank_lang <- "German"
# then, query Wordbank
source("scripts/wordbank.R")
View(aoa.m)
# CHILDES
# likely uses the collection names listed here: https://childes.talkbank.org/access/
# check by inputting function here: get_transcripts(collection = "Eng-NA")
childes_lang <- "German"
# then, query childes
source("scripts/childes.R")
View(prod_stats)
View(d_prod)
speaker_stats <- get_speaker_statistics(collection = childes_lang,
age = c(12, 36),
role = "target_child")
speaker_stats <- speaker_stats[,c("speaker_id", "target_child_age", "transcript_id", "num_utterances", "num_tokens")]
prod_stats <- merge(d_prod, speaker_stats, by = c("speaker_id", "target_child_age", "transcript_id"))
prod_stats <- prod_stats %>%
#filter(num_tokens != 0) %>% #remove children w/o tokens, can't comput anything for them
mutate(token_ratio = count/num_tokens)
prod_stats$gloss <- tolower(prod_stats$gloss)
View(prod_stats)
prod_stats <- prod_stats %>%
group_by(gloss)%>%
summarise(CHILDES_token_freq = mean(token_ratio, na.rm = T))
word_list
prod_stats <- prod_stats[prod_stats$gloss %in% word_list, ]
View(prod_stats)
word_list
# Wordbank
# first, identify the strings used for this language in wordbank
#Wordbank
# get_instruments()
wordbank_lang <- "German"
# then, query Wordbank
source("scripts/wordbank.R")
# returns aoa.m, a summary of youngest reported AoA for understanding and producing
# returns word_list, a list of the words in aoa.m to be used for querying chiles in the next step
# CHILDES
# likely uses the collection names listed here: https://childes.talkbank.org/access/
# check by inputting function here: get_transcripts(collection = "Eng-NA")
childes_lang <- "German"
# then, query childes
source("scripts/childes.R")
View(prod_stats)
if(exists("prod_stats")){
d <- left_join(aoa.m, prod_stats, by = c("definition" = "gloss"))
} else{
d <- aoa.m
d$CHILDES_token_freq <- NA
}
View(d)
knitr::opts_chunk$set(echo = TRUE)
# R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
library(wordbankr)
library(childesr)
library(dplyr)
library(tidyr)
library(purrr)
library(stringi)
# Wordbank
# first, identify the strings used for this language in wordbank
#Wordbank
# get_instruments()
wordbank_lang <- "English (American)"
# then, query Wordbank
source("scripts/wordbank.R")
# returns aoa.m, a summary of youngest reported AoA for understanding and producing
# returns word_list, a list of the words in aoa.m to be used for querying chiles in the next step
# CHILDES
# likely uses the collection names listed here: https://childes.talkbank.org/access/
# check by inputting function here: get_transcripts(collection = "Eng-NA")
childes_lang <- "Eng-NA"
# then, query childes
source("scripts/childes.R")
# returns prod_stats, a summary of the token frequency of the words in word_list
# Combine the Wordbank and CHILDES data together
# if CHILDES doesn't produce any data, then return just Wordbank data, with NA's in the CHILDES column
if(nrow(prod_stats) == 0){
d <- left_join(aoa.m, prod_stats, by = c("definition" = "gloss"))
} else{
d <- aoa.m
d$CHILDES_token_freq <- NA
}
View)d
View(d)
unique(d$category)
knitr::opts_chunk$set(echo = TRUE)
# R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
library(wordbankr)
library(childesr)
library(dplyr)
library(tidyr)
library(purrr)
library(stringi)
# Wordbank
# first, identify the strings used for this language in wordbank
#Wordbank
# get_instruments()
wordbank_lang <- "English (American)"
# then, query Wordbank
source("scripts/wordbank.R")
View(aoa.m)
# CHILDES
# likely uses the collection names listed here: https://childes.talkbank.org/access/
# check by inputting function here: get_transcripts(collection = "Eng-NA")
childes_lang <- "Eng-NA"
# then, query childes
source("scripts/childes.R")
View(prod_stats)
if(nrow(prod_stats) == 0){
d <- left_join(aoa.m, prod_stats, by = c("definition" = "gloss"))
} else{
d <- aoa.m
d$CHILDES_token_freq <- NA
}
View(d)
nrow(prod_stats)
if(nrow(prod_stats) != 0){
d <- left_join(aoa.m, prod_stats, by = c("definition" = "gloss"))
} else{
d <- aoa.m
d$CHILDES_token_freq <- NA
}
View(d)
# Wordbank
# first, identify the strings used for this language in wordbank
#Wordbank
# get_instruments()
wordbank_lang <- "German"
eng <- d
# then, query Wordbank
source("scripts/wordbank.R")
View(aoa.m)
# CHILDES
# likely uses the collection names listed here: https://childes.talkbank.org/access/
# check by inputting function here: get_transcripts(collection = "Eng-NA")
childes_lang <- "German"
# then, query childes
source("scripts/childes.R")
if(nrow(prod_stats) != 0){
d <- left_join(aoa.m, prod_stats, by = c("definition" = "gloss"))
} else{
d <- aoa.m
d$CHILDES_token_freq <- NA
}
View(d)
ger <- d
View(eng)
# Wordbank
# first, identify the strings used for this language in wordbank
#Wordbank
# get_instruments()
wordbank_lang <- "English (American)"
# get information about what forms are available in this language
admin_info <- get_administration_data(language = "doop")
# get information about what forms are available in this language
admin_info <- try(get_administration_data(language = "doop"), silent = TRUE)
class(admin_info)
measures <- data.frame(matrix(NA, nrow=0, ncol=10))
measures <- data.frame(matrix(NA, nrow=0, ncol=10))
measures$wordbank$Wordbank_AoA_understands <- NA
measures$wordbank$Wordbank_AoA_produces <- NA
# create overview of available measures
measures <- data.frame(matrix(NA, nrow=0, ncol=3))
names(measures) <- c("language", "Wordbank_AoA_understands", "Wordbank_AoA_produces", "CHILDES_token_freq")
# create overview of available measures
measures <- data.frame(matrix(NA, nrow=1, ncol=4))
names(measures) <- c("language", "Wordbank_AoA_understands", "Wordbank_AoA_produces", "CHILDES_token_freq")
measure
measures
# get information about what forms are available in this language
# try, because there may not be any wordbank info available for this language
admin_info <- try(get_administration_data(language = wordbank_lang), silent = TRUE)
form_list <- as.list(unique(admin_info$form))
# go through each form type and extract comprehension and production information
aoa.mat <- data.frame(matrix(NA, nrow=0, ncol=10))
form_list
i=2
f.data <- get_instrument_data(language = wordbank_lang,
form = form_list[i],
administrations = TRUE,
iteminfo = TRUE)
View(f.data)
# At what age do 50% of children understand this word?
aoa.comp <- fit_aoa(f.data,
measure = "understands",
method = "empirical",
proportion = 0.5)
View(aoa.comp)
rm(i)
form_list <- as.list(unique(admin_info$form))
# go through each form type and extract comprehension and production information
aoa.mat <- data.frame(matrix(NA, nrow=0, ncol=10))
for(i in 1:length(form_list)){
f.data <- get_instrument_data(language = wordbank_lang,
form = form_list[i],
administrations = TRUE,
iteminfo = TRUE)
# Get Age of Acquisition
# At what age do 50% of children understand this word?
aoa.comp <- fit_aoa(f.data,
measure = "understands",
method = "empirical",
proportion = 0.5)
aoa.comp$aoa_type <- "Wordbank_AoA_understands"
# At what age do 50% of children understand this word?
aoa.prod <- fit_aoa(f.data,
measure = "produces",
method = "empirical",
proportion = 0.5)
aoa.prod$aoa_type <- "Wordbank_AoA_produces"
aoa.cp <- rbind(aoa.comp, aoa.prod)
aoa.cp$form <- form_list[i]
aoa.mat <- rbind(aoa.mat, aoa.cp)
}
aoa.m <- aoa.mat %>%
filter(lexical_class == "nouns" | lexical_class == "verbs") %>% # narrow down to just nouns and verbs
ungroup(num_item_id)%>%
select(definition, category, lexical_class, uni_lemma, aoa_type, form, aoa) %>% # only columns we're interested in
pivot_wider(names_from = form, values_from = aoa) ## make wider so that we have one column for each form
# identify the lowest AoA value for each word found in the forms
aoa.m <- aoa.m %>%
nest(-definition, -category, -lexical_class, -uni_lemma, -aoa_type) %>% # nest rest of columns apart from id columns
mutate(min_aoa = map(data, min, na.rm = T)) %>%  # identify the lowest AoA value, putting it in the column min_aoa
unnest(cols = c(data, min_aoa)) %>%
select(definition, category, lexical_class, uni_lemma, aoa_type, min_aoa)%>% # only columns we're interested in
pivot_wider(names_from = aoa_type, values_from = min_aoa) %>% # make wider so we have one column for understands and one for produces
filter(is.finite(Wordbank_AoA_understands)) # filter out the rows with Inf values, which result when both understands and produces don't have an AoA
#(because there is no point at which AoA is above 50% in the measured ages)
# for ease of matching up with CHILDES data, remove qualifiers from definition and uni_lemma
# object, food, animal, action, beverage
aoa.m$definition <- sub("* \\(.*\\)", "", aoa.m$definition)
aoa.m$definition <- tolower(aoa.m$definition)
View(aoa.m)
# mark whether comprehension and production data are available
measures$wordbank$Wordbank_AoA_understands <- ifelse(all(is.na(aoa.m$Wordbank_AoA_understands)), NA, "yes")
measures$wordbank$Wordbank_AoA_produces <- ifelse(all(is.na(aoa.m$Wordbank_AoA_produces)), NA, "yes")
# mark whether comprehension and production data are available
measures$Wordbank_AoA_understands <- ifelse(all(is.na(aoa.m$Wordbank_AoA_understands)), NA, "yes")
measures$Wordbank_AoA_produces <- ifelse(all(is.na(aoa.m$Wordbank_AoA_produces)), NA, "yes")
View(measures)
knitr::opts_chunk$set(echo = TRUE)
# R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
library(wordbankr)
library(childesr)
library(dplyr)
library(tidyr)
library(purrr)
library(stringi)
# create overview of available measures
measures <- data.frame(matrix(NA, nrow=1, ncol=4))
names(measures) <- c("language", "Wordbank_AoA_understands", "Wordbank_AoA_produces", "CHILDES_token_freq")
# Wordbank
# first, identify the strings used for this language in wordbank
#Wordbank
# get_instruments()
wordbank_lang <- "English (American)"
# then, query Wordbank
source("scripts/wordbank.R")
View(aoa.m)
# returns aoa.m, a summary of youngest reported AoA for understanding and producing
# returns word_list, a list of the words in aoa.m to be used for querying chiles in the next step
measures
# try, because there may not be any childes info available for this language
d_prod <- try(get_types(collection = "doop",
age = c(12, 36),
role = "target_child",
type = word_list),
silent = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
library(wordbankr)
library(childesr)
library(dplyr)
library(tidyr)
library(purrr)
library(stringi)
# create overview of available measures
measures <- data.frame(matrix(NA, nrow=1, ncol=4))
names(measures) <- c("language", "Wordbank_AoA_understands", "Wordbank_AoA_produces", "CHILDES_token_freq")
# Wordbank
# first, identify the strings used for this language in wordbank
#Wordbank
# get_instruments()
wordbank_lang <- "English (American)"
# then, query Wordbank
source("scripts/wordbank.R")
# returns aoa.m, a summary of youngest reported AoA for understanding and producing
# returns word_list, a list of the words in aoa.m to be used for querying chiles in the next step
# CHILDES
# likely uses the collection names listed here: https://childes.talkbank.org/access/
# check by inputting function here: get_transcripts(collection = "Eng-NA")
childes_lang <- "Eng-NA"
# then, query childes
source("scripts/childes.R")
# CHILDES
# likely uses the collection names listed here: https://childes.talkbank.org/access/
# check by inputting function here: get_transcripts(collection = "Eng-NA")
childes_lang <- "Eng-NA"
View(prod_stats)
# then, query childes
source("scripts/childes.R")
View(prod_stats)
measures
if(nrow(prod_stats) != 0){
d <- left_join(aoa.m, prod_stats, by = c("definition" = "gloss"))
} else{
d <- aoa.m
d$CHILDES_token_freq <- NA
}
view(d)
View(d)
d$source <- ifelse(!is.na(measures$Wordbank_AoA_understands), "Wordbank_AoA_understands",
ifelse(!is.na(measures$Wordbank_AoA_produces), "Wordbank_AoA_produces",
ifelse(!is.na(measures$CHILDES_token_freq), "CHILDES_token_freq"),
NA))
View(d)
if(nrow(prod_stats) != 0){
d <- left_join(aoa.m, prod_stats, by = c("definition" = "gloss"))
} else{
d <- aoa.m
d$CHILDES_token_freq <- NA
}
source_measure <- ifelse(!is.na(measures$Wordbank_AoA_understands), "Wordbank_AoA_understands",
ifelse(!is.na(measures$Wordbank_AoA_produces), "Wordbank_AoA_produces",
ifelse(!is.na(measures$CHILDES_token_freq), "CHILDES_token_freq"),
NA))
source_measure
if(nrow(prod_stats) != 0){
d <- left_join(aoa.m, prod_stats, by = c("definition" = "gloss"))
} else{
d <- aoa.m
d$CHILDES_token_freq <- NA
}
source_measure <- ifelse(!is.na(measures$Wordbank_AoA_understands), "Wordbank_AoA_understands",
ifelse(!is.na(measures$Wordbank_AoA_produces), "Wordbank_AoA_produces",
ifelse(!is.na(measures$CHILDES_token_freq), "CHILDES_token_freq",
NA)))
d$source_variable <- ifelse(!is.na(measures$Wordbank_AoA_understands), d$Wordbank_AoA_understands,
ifelse(!is.na(measures$Wordbank_AoA_produces), d$Wordbank_AoA_produces,
ifelse(!is.na(measures$CHILDES_token_freq), d$CHILDES_token_freq,
NA)))
view(d)
View(d)
str(d)
min_vocab <- d %>%
group_by(category) %>%
slice_min(source_variable, n=8)
min_vocab
View(min_vocab)
source_measure <- ifelse(!is.na(measures$Wordbank_AoA_understands), "Wordbank_AoA_understands",
ifelse(!is.na(measures$Wordbank_AoA_produces), "Wordbank_AoA_produces",
ifelse(!is.na(measures$CHILDES_token_freq), "CHILDES_token_freq",
NA)))
d$source_variable <- ifelse(source_measure == "Wordbank_AoA_understands", d$Wordbank_AoA_understands,
ifelse(source_measure == "Wordbank_AoA_produces", d$Wordbank_AoA_produces,
ifelse(source_measure == "CHILDES_token_freq", d$CHILDES_token_freq,
NA)))
View(d)
d$source_measure <- ifelse(!is.na(measures$Wordbank_AoA_understands), "Wordbank_AoA_understands",
ifelse(!is.na(measures$Wordbank_AoA_produces), "Wordbank_AoA_produces",
ifelse(!is.na(measures$CHILDES_token_freq), "CHILDES_token_freq",
NA)))
d$source_variable <- ifelse(d$source_measure == "Wordbank_AoA_understands", d$Wordbank_AoA_understands,
ifelse(d$source_measure == "Wordbank_AoA_produces", d$Wordbank_AoA_produces,
ifelse(d$source_measure == "CHILDES_token_freq", d$CHILDES_token_freq,
NA)))
min_vocab <- d %>%
group_by(category) %>%
slice_min(source_variable, n=8)
# optional?
min_vocab2 <- min_vocab %>%
group_by(category) %>%
slice_min(Wordbank_AoA_produces, n=8)
View(min_vocab2)
min_vocab <- d %>%
group_by(category) %>%
slice_min(source_variable, n=8)
min_vocab$vocab_category <- "easy"
# # optional?
# min_vocab2 <- min_vocab %>%
#   group_by(category) %>%
#   slice_min(Wordbank_AoA_produces, n=8)
#
max_vocab <- d %>%
group_by(category) %>%
slice_max(source_variable, n=8)
max_vocab$vocab_category <- "hard"
vocab_sum <- rbind(min_vocab, max_vocab)
View(vocab_sum)
?write.csv
vs_filename <- paste(wordbank_lang, "vocab_choice", sep = "_")
write.csv(vocab_sum, file = vs_filename)
vs_filename <- paste0(wordbank_lang, "vocab_choice.csv")
write.csv(vocab_sum, file = vs_filename)
unique(d$category)
# write them into their own csv file
# which can be later edited to add additional information
vs_filename <- paste0(wordbank_lang, "_vocab_choice.csv")
write.csv(vocab_sum, file = vs_filename)
=======
devtools::install_github("langcog/wordbankr")
if(!require(installr)) { install.packages("installr"); require(installr)} #load / install+load installr
updateR(F, T, T, F, T, F, T) # install, move, update.package, quit R.
>>>>>>> parent of 7c4b723 (added scripts for childes and peekbank)
